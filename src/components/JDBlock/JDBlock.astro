---
import type { Options } from "./jdBlockFunctions";

/**
 * `text`: the text to render. Will be split in to an array of strings.
 * `classArray`: an array of strings. [0] for the first line, [n] for the last.
 * `options`: TBC.
 */
interface Props {
  text: string;
  classArray?: Array<string>;
  options?: Options;
}
const { text, classArray = [], options } = Astro.props;

import { processJDBlock } from "./jdBlockFunctions";
const arrayToRender = processJDBlock(text, classArray, options);
---

<div class="JDBlock">
  {
    arrayToRender.map((line) => {
      return <pre class:list={line.classes} set:html={line.text} />;
    })
  }
</div>

<style lang="scss" is:global>
  // Global required as we're mapping in lines from an array.
  @use "/src/styles/johnny" as *;

  // We moved everything out because of the style-doesn't-render-on-22.01 issue.
</style>
